#!/usr/bin/env bash
source "$(cd "$(dirname "$0")" && pwd)/../pretty-print"

# By default `bash` on MacOS is v3.x which is very old! The below upgrades you to the latest
# You'll end up with:
#   - /bin/bash <= v3.x
#   - /usr/local/bin/bash <= v5+
# /bin is a protected directly, it can't be changed (even with `sudo`), therefore on all scripts, at the top use:
# !/usr/bin/env bash
# https://itnext.io/upgrading-bash-on-macos-7138bd1066ba

brews=(
    awscli
    # kubernetes
    aws-iam-authenticator
    jsonnet
    # docker
    docker-compose
    # python
    pyenv
    # node
    yarn
    # password store
    gopass
    gnupg
    # bash testing
    bats-core
    # general
    bash # latest bash (see above)
    coreutils
    git
    gnu-sed
    gh
    grep # full grep (osx has a reduced-feature version)
    jq
    moreutils
    shellcheck
    wget
    watchman
    python-yq
    kind
    tilt-dev/tap/ctlptl
    tilt-dev/tap/tilt
    antibody
    libpq
)

title "Homebrew"

echo_install "Updating"
brew update >/dev/null
print_in_green "${bold}✓ done!${normal}\n"
echo_install "Cleaning"
brew cleanup &>/dev/null
print_in_green "${bold}✓ done!${normal}\n"

title "Brews"

installed=$(brew list)
outdated=$(brew outdated)

for brew in "${brews[@]}"; do
    if ! echo "$installed" | grep -q "$brew"; then
        echo_install "Installing $brew"
        brew install --quiet "$brew" >/dev/null
        brew link --overwrite "$brew" &>/dev/null
        print_in_green "${bold}✓ installed!${normal}\n"
    else
        if [ "$FORCE" = true ]; then
            echo_install "Reinstalling $brew"
            brew reinstall --quiet "$brew" >/dev/null
            print_in_green "${bold}✓ installed!${normal}\n"
        elif echo "$outdated" | grep -q "$brew"; then
            echo_install "Upgrading $brew"
            brew upgrade --quiet "$brew" >/dev/null
            print_in_green "${bold}✓ upgraded!${normal}\n"
        else
            print_success_muted "$brew"
        fi
    fi
done

# brews outside of the reformation specified ones
other_brews=$(brew outdated | wc -l)
if [ "$other_brews" -gt 0 ]; then
    print_warning "$other_brews other brews are outdated. Run 'brew upgrade' to upgrade them."
fi

if [[ ! ":$PATH:" == *":/usr/local/opt/grep/libexec/gnubin:"* ]]; then
    print_error "\$PATH entry missing for 'grep'"
    print_error "Add to your shell's rc file: PATH=\"/usr/local/opt/grep/libexec/gnubin:\$PATH\""
fi

if [[ ! ":$PATH:" == *":/usr/local/opt/gnu-sed/libexec/gnubin:"* ]]; then
    print_error "\$PATH entry missing for 'sed'"
    print_error "Add to your shell's rc file: PATH=\"/usr/local/opt/gnu-sed/libexec/gnubin:\$PATH\""
fi
