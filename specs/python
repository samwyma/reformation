#!/usr/bin/env bash
source "$(cd "$(dirname "$0")" && pwd)/../pretty-print"

packages=(
	pipenv
	credstash
	pylint
	pywatchman
)

title "Python"

if [ ! "$FORCE" = true ] && command -v pyenv &>/dev/null; then
	if brew outdated pyenv | grep -q pyenv; then
		echo_install "Upgrading pyenv…"
		brew upgrade pyenv &>/dev/null
		print_in_green "${bold}✓ upgraded!${normal}\n"
	else
		print_success_muted "pyenv"
	fi
else
	echo_install "Installing pyenv…"
	brew install pyenv &>/dev/null
	print_in_green "${bold}✓ installed!${normal}\n"
fi

version=$(pyenv install --list | grep "^\s*[0-9]\.[0-9]\.[0-9]$" | tail -1 | xargs)

if [ "$FORCE" = true ] || ! pyenv versions | grep -q "$version"; then
	echo_install "Installing python v$version"
	pyenv install "$version" &>/dev/null
	print_in_green "${bold}✓ installed!${normal}\n"
else
	print_success_muted "python $version (pyenv)"
fi

# Set the global version
pyenv global "$version" &>/dev/null
# Upgrade pip to the latest version
pip3 install --upgrade pip >/dev/null

grep -q .pyenv/shims <<<"$(command -v pip3)" || print_error "Please add 'eval \"\$(pyenv init -)\"' to your .*rc file"
eval "$(pyenv init -)"

uptodate=$(pip3 list --uptodate)

for package in "${packages[@]}"; do
	if grep -q "$package" <<<"$uptodate"; then
		print_success_muted "$package"
	else
		echo_install "Upgrading $package"
		pip3 install --upgrade "$package" --quiet
		print_in_green "${bold}✓ done!${normal}\n"
	fi
done

# This is a hack to get watchman working in python 3
# https://github.com/facebook/watchman/issues/631
if grep -q .pyenv/shims <<<"$(command -v pip3)"; then
	gsed -i 's/basestring/str/g' ~/.pyenv/versions/"$version"/bin/watchman-make
fi
