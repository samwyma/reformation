#!/usr/bin/env bash

set -euo pipefail

### VARIABLES

echo_help() {
  echo "Usage:
    --profile <string>     : Your AWS CLI profile, ie 'default'
    --account-id <string>  : The AWS Account Id where the role resides
    --role <string>        : The role to assume
    --duration <int>       : The life of the session (in seconds) when assuming a role

Examples:
aws-assume-role --account-id 12345678 --role administrator --profile default --duration 600
      "
}

profile="${AWS_PROFILE:=default}"

account_id=""
role=""

for var in "$@"; do
  case "$var" in
  --profile)
    profile="$2"
    ;;
  --account-id)
    account_id="$2"
    ;;
  --role)
    role="$2"
    ;;
  --duration)
    duration="$2"
    ;;
  --help)
    echo_help
    exit 0
    ;;
  esac
  shift
done

if [ "$role" == "" ]; then
  echo_help
  exit 1
fi

if [ "$account_id" == "" ]; then
  echo_help
  exit 1
fi

### FUNCTIONS

set_duration() {
  if [[ ! -v duration ]]; then
    minutes="60"
    duration=$((minutes * 60))
  fi
}

get_session_token() {
  "$(cd "$(dirname "$0")" && pwd)/aws-get-session-token"
  profile="mfa"
}

### ASSUME-ROLE

set_duration

echo "Assuming role..."
response=$(aws sts assume-role \
  --role-arn arn:aws:iam::"$account_id":role/"$role" \
  --role-session-name "$account_id-session" \
  --duration-seconds "$duration" \
  --profile $profile)

new_profile_name="${account_id}_${role}"

aws configure set profile."${new_profile_name}".aws_access_key_id "$(jq -r .Credentials.AccessKeyId <<<"$response")"
aws configure set profile."${new_profile_name}".aws_secret_access_key "$(jq -r .Credentials.SecretAccessKey <<<"$response")"
aws configure set profile."${new_profile_name}".aws_session_token "$(jq -r .Credentials.SessionToken <<<"$response")"

echo "Profile: ${new_profile_name}"
jq --arg profile "$new_profile_name" '. += {"Profile": $profile}' <<<"$response"
